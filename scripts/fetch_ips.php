<?php

date_default_timezone_set('Asia/Tehran');

function get_optimization_ip($type = 'v4') {
    $KEY = 'o1zrmHAF';
    try {
        $headers = array('Content-Type: application/json');
        $data = array("key" => $KEY, "type" => $type);
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, 'https://api.hostmonit.com/get_optimization_ip');
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
        curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36');
        $response = curl_exec($ch);
        $http_status = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        curl_close($ch);
        if ($http_status == 200) {
            return json_decode($response, true);
        } else {
            echo "CHANGE OPTIMIZATION IP ERROR: REQUEST STATUS CODE IS NOT 200\n";
            return null;
        }
    } catch (Exception $e) {
        echo "CHANGE OPTIMIZATION IP ERROR: " . $e->getMessage() . "\n";
        return null;
    }
}

$last_updated = date('Y-m-d H:i:s');

$getListIpv4 = get_optimization_ip();
$ipv4 = [];
if (isset($getListIpv4['code'], $getListIpv4['total']) && $getListIpv4['code'] === 200 && $getListIpv4['total'] > 0) {
    foreach ($getListIpv4['info'] as $l) {
        if (isset($l['ip'], $l['port'])) {
            $ipv4[] = $l['ip'] . ':' . $l['port'];
        } elseif (is_string($l)) {
            $ipv4[] = $l;
        }
    }
    file_put_contents("list/ipv4.json", json_encode(array_slice($ipv4, 0, 25), JSON_PRETTY_PRINT));
}

$getListIpv6 = get_optimization_ip('v6');
$ipv6 = [];
if (isset($getListIpv6['code'], $getListIpv6['total']) && $getListIpv6['code'] === 200 && $getListIpv6['total'] > 0) {
    foreach ($getListIpv6['info'] as $l) {
        if (isset($l['ip'], $l['port'])) {
            $ipv6[] = '[' . $l['ip'] . ']:' . $l['port'];
        } elseif (is_string($l)) {
            $ipv6[] = $l;
        }
    }
    file_put_contents("list/ipv6.json", json_encode(array_slice($ipv6, 0, 25), JSON_PRETTY_PRINT));
}

$ips = [];
if (!empty($ipv4) && !empty($ipv6)) {
    $ips['ipv4'] = array_slice($ipv4, 0, 25);
    $ips['ipv6'] = array_slice($ipv6, 0, 25);
    file_put_contents("list/export.json", json_encode($ips, JSON_PRETTY_PRINT));
}

$readme_content = "# Optimized IP Addresses\n\n";
$readme_content .= "## Last Updated: $last_updated\n\n";
$readme_content .= "This repository provides a list of optimized IPv4 and IPv6 addresses fetched from the Hostmonit API. These addresses can be used for network optimization, proxy setup, or other connectivity purposes. The list is updated every 2 hours to ensure freshness.\n\n";

$readme_content .= <<<EOD
<script>
function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(() => {
        alert('Copied to clipboard: ' + text);
    });
}
</script>
EOD;

$readme_content .= "\n## IPv4 Addresses\n";
foreach (array_slice($ipv4, 0, 15) as $ip) {
    $safe_ip = htmlspecialchars($ip, ENT_QUOTES);
    $readme_content .= "- <a href='#' onclick=\"copyToClipboard('$safe_ip')\">$ip</a>\n";
}

$readme_content .= "\n## IPv6 Addresses\n";
foreach (array_slice($ipv6, 0, 15) as $ip) {
    $safe_ip = htmlspecialchars($ip, ENT_QUOTES);
    $readme_content .= "- <a href='#' onclick=\"copyToClipboard('$safe_ip')\">$ip</a>\n";
}

$readme_content .= "\n\nGenerated by scripts/fetch_ips.php";
file_put_contents("README.md", $readme_content);
echo "README.md updated successfully!\n";

### تغییرات اعمال‌شده
1. **تنظیم منطقه زمانی به وقت ایران**:
   - با اضافه کردن `date_default_timezone_set('Asia/Tehran')` در ابتدای کد، تاریخ و ساعت به وقت ایران نمایش داده می‌شود.
   - از `date('Y-m-d H:i:s')` استفاده شده و `T` حذف شده است تا فقط تاریخ و ساعت بدون نام منطقه زمانی نمایش داده شود (مثلاً `2025-07-22 20:00:00`).

2. **رفع مشکل نمایش `Array`**:
   - در حلقه‌های پردازش `$getListIpv4['info']` و `$getListIpv6['info']`، بررسی می‌شود که آیا `$l` یک آرایه با کلیدهای `ip` و `port` است یا خیر. اگر باشد، آدرس به فرمت `ip:port` (برای IPv4) یا `[ip]:port` (برای IPv6) ساخته می‌شود.
   - اگر `$l` مستقیماً یک رشته باشد (مثلاً `188.114.96.184:946`)، بدون تغییر به آرایه اضافه می‌شود.
   - این تغییر تضمین می‌کند که خروجی به جای `Array`، آدرس‌های IP درست را نمایش دهد.

3. **بازگرداندن قابلیت کپی به کلیپ‌بورد**:
   - کد JavaScript برای کپی کردن آدرس‌های IP با کلیک دوباره اضافه شده است، چون در درخواست قبلی این قابلیت را خواسته بودید.
   - هر آدرس IP به صورت لینک HTML با تابع `onclick` نمایش داده می‌شود تا با کلیک، به کلیپ‌بورد کپی شود.

4. **ذخیره در مسیر درست**:
   - فایل‌ها همچنان در پوشه `list/` ذخیره می‌شوند و مسیر فایل اسکریپت در `README.md` به `scripts/fetch_ips.php` اشاره می‌کند.

### نمونه خروجی مورد انتظار برای `README.md`
```markdown
# Optimized IP Addresses

## Last Updated: 2025-07-22 20:30:44

This repository provides a list of optimized IPv4 and IPv6 addresses fetched from the Hostmonit API. These addresses can be used for network optimization, proxy setup, or other connectivity purposes. The list is updated every 2 hours to ensure freshness.

<script>
function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(() => {
        alert('Copied to clipboard: ' + text);
    });
}
</script>


### تغییرات اعمال‌شده
1. **تنظیم منطقه زمانی به وقت ایران**:
   - با اضافه کردن `date_default_timezone_set('Asia/Tehran')` در ابتدای کد، تاریخ و ساعت به وقت ایران نمایش داده می‌شود.
   - از `date('Y-m-d H:i:s')` استفاده شده و `T` حذف شده است تا فقط تاریخ و ساعت بدون نام منطقه زمانی نمایش داده شود (مثلاً `2025-07-22 20:00:00`).

2. **رفع مشکل نمایش `Array`**:
   - در حلقه‌های پردازش `$getListIpv4['info']` و `$getListIpv6['info']`، بررسی می‌شود که آیا `$l` یک آرایه با کلیدهای `ip` و `port` است یا خیر. اگر باشد، آدرس به فرمت `ip:port` (برای IPv4) یا `[ip]:port` (برای IPv6) ساخته می‌شود.
   - اگر `$l` مستقیماً یک رشته باشد (مثلاً `188.114.96.184:946`)، بدون تغییر به آرایه اضافه می‌شود.
   - این تغییر تضمین می‌کند که خروجی به جای `Array`، آدرس‌های IP درست را نمایش دهد.

3. **بازگرداندن قابلیت کپی به کلیپ‌بورد**:
   - کد JavaScript برای کپی کردن آدرس‌های IP با کلیک دوباره اضافه شده است، چون در درخواست قبلی این قابلیت را خواسته بودید.
   - هر آدرس IP به صورت لینک HTML با تابع `onclick` نمایش داده می‌شود تا با کلیک، به کلیپ‌بورد کپی شود.

4. **ذخیره در مسیر درست**:
   - فایل‌ها همچنان در پوشه `list/` ذخیره می‌شوند و مسیر فایل اسکریپت در `README.md` به `scripts/fetch_ips.php` اشاره می‌کند.

### نمونه خروجی مورد انتظار برای `README.md`
```markdown
# Optimized IP Addresses

## Last Updated: 2025-07-22 20:30:44

This repository provides a list of optimized IPv4 and IPv6 addresses fetched from the Hostmonit API. These addresses can be used for network optimization, proxy setup, or other connectivity purposes. The list is updated every 2 hours to ensure freshness.

<script>
function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(() => {
        alert('Copied to clipboard: ' + text);
    });
}
</script>

## IPv4 Addresses

<a href="#" onclick="copyToClipboard('188.114.96.184:946рих4')">188.114.96.184:946</a>

<a href="#" onclick="copyToClipboard('162.159.195.182:859')">162.159.195.182:859unless4</a>

<a href="#" onclick="copyToClipboard('162.159.193.225:7156')">162.159.193.225:7156</a>
...



IPv6 Addresses #IPv6#\#\mathrm{IPv6}\#\#\mathrm{IPv6}\#


- <a href="#" onclick="copyToClipboard('[2606:4700:d0::d684:c6e3:92dd:257e]:946')">[2606:4700:d0::d684:c6e3:92dd:257e]:946</a>
- <a href="#" onclick="copyToClipboard('[2606:4700:d0::b02b:b6dc:1c37:6962]:859')">[2606:4700:d0::b02b:b6dc:1c37:6962]:859</a>
...



Generated by scripts/fetch_ips.php


### نکات مهم
1. **ساختار داده‌های API**:
   - اگر ساختار داده‌های API متفاوت باشد (مثلاً `$l` یک رشته یا ساختار دیگری داشته باشد)، لطفاً نمونه‌ای از خروجی API را ارائه دهید تا بتوانم کد را دقیق‌تر تنظیم کنم.
   - برای تست، می‌توانید اسکریپت را به‌صورت دستی اجرا کنید و خروجی `$getListIpv4['info']` و `$getListIpv6['info']` را با `var_dump` یا `print_r` بررسی کنید.


### نکات مهم
1. **ساختار داده‌های API**:
   - اگر ساختار داده‌های API متفاوت باشد (مثلاً `$l` یک رشته یا ساختار دیگری داشته باشد)، لطفاً نمونه‌ای از خروجی API را ارائه دهید تا بتوانم کد را دقیق‌تر تنظیم کنم.
   - برای تست، می‌توانید اسکریپت را به‌صورت دستی اجرا کنید و خروجی `$getListIpv4['info']` و `$getListIpv6['info']` را با `var_dump` یا `print_r` بررسی کنید.

2. **اجرای GitHub Actions**:
   - برای رفع مشکل `403 Forbidden` در GitHub Actions (که در پیام قبلی اشاره کردید)، لطفاً راه‌حل‌های ارائه‌شده در پاسخ قبلی را اعمال کنید (مانند استفاده از Personal Access Token یا غیرفعال کردن حفاظت شاخه).

3. **تست کد**:
   - کد را روی سرور خود تست کنید تا مطمئن شوید فایل‌های JSON و README به درستی تولید می‌شوند.
   - اگر API پاسخ ندهد یا ساختار داده‌ها متفاوت باشد، ممکن است نیاز به تغییر در نحوه پردازش `$l` باشد.

### مراحل بعدی
1. **تست محلی**:
   - اسکریپت را روی سیستم خود اجرا کنید و فایل‌های `list/ipv4.json`، `list/ipv6.json` و `list/export.json` را بررسی کنید تا مطمئن شوید آدرس‌های IP به درستی ذخیره می‌شوند.
   - محتوای `README.md` را باز کنید تا ببینید آیا آدرس‌ها به درستی نمایش داده می‌شوند یا خیر.

2. **رفع مشکل GitHub Actions**:
   - فایل `.github/workflows/ip_generator.yml` را طبق پاسخ قبلی اصلاح کنید (مخصوصاً مسیر فایل PHP و تنظیمات cron).
   - از Personal Access Token برای push کردن تغییرات استفاده کنید.

3. **بررسی API**:
   - اگر همچنان مشکل نمایش `Array` دارید، خروجی API را بررسی کنید:
     ```php
     var_dump($getListIpv4['info']);
     var_dump($getListIpv6['info']);
     ```
     این کار ساختار دقیق داده‌ها را نشان می‌دهد.

اگر باز هم مشکلی داشتید یا نیاز به کمک برای بررسی خروجی API یا تنظیمات GitHub Actions دارید، لطفاً جزئیات بیشتری ارائه دهید (مثلاً خروجی API یا لاگ GitHub Actions).
